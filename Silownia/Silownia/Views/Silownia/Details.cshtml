@model Silownia.Models.Silownia
@using System.Globalization;

@{
    ViewBag.Title = "Siłownia: szczegóły";
}



<div>
    <h2>Szczegóły dotyczące wybranej siłowni</h2>
	<hr />
    <fieldset>
        <table width="100%">
            <td>
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.Nazwa)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Nazwa)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.GodzinaOtwarcia)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.GodzinaOtwarcia)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.GodzinaZamkniecia)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.GodzinaZamkniecia)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Powierzchnia)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Powierzchnia)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.NrTelefonu)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.NrTelefonu)
                    </dd>
                    @if (!ViewBag.mniejSzczegolow)
                        {
                        <dt>
                                         
                            @Html.ActionLink("Edytuj", "Edit", new { id = Model.SilowniaID }) |
                        
                        </dt>
                        <dt>
                            @Html.ActionLink("Przejdź do listy siłowni", "Index") |
                        </dt>
                        }
                </dl>
            </td>
            <td>
                
            </td>
            <td>
                <!-- This is the div that will contain the Google Map -->
                @if (ViewBag.mniejszaMapa)
                {
                    <div id="map_canvas" style="height: 200px; width : 200px"></div>
                }
                else
                {
                    <div id="map_canvas" style="height: 300px; width : 800px"></div>
                }
                
                <!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
            </td>
        </table>
    </fieldset>
   @if (!ViewBag.mniejSzczegolow)
   {

        //Dodatkowe info ( Umowy )
    <dl class="table-bordered" style="color:#0099CC">
        <dt>
            @Html.Label("Umowy", new { style = "color:#0099CC" })
        </dt>

        @if (Model.Umowy.Count > 0)
        {
            <dd>
                <table class="table">
                    <tr>
                        <th>Klient</th>
                        <th>Data podpisania umowy</th>
                        <th>Data końca umowy</th>
                    </tr>
                    @foreach (var item in Model.Umowy)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Klient.imieNazwisko)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DataPodpisania)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DataZakonczenia)
                            </td>

                        </tr>
                    }

                </table>
            </dd>
        }
        else
        {
            <dt>
                @Html.Label("Brak klientów", new { style = "color:#D11919" })
            </dt>
        }

    </dl>
   }
</div>


<script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script> 
<script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>

<!-- This css is to ensure that the google map contols (zoom bar etc) show and size correctly. -->
<style>
    #map_canvas img {
        max-width: none;
    }
</style>

<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
<style>
    .infoDiv {
        height: auto;
        width: auto;
        -webkit-user-select: none;
        background-color: white;
    }
</style>

@section scripts {
    <section class="scripts">
        <script type="text/javascript">
  @*<!-- This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded. -->*@
            $(document).ready(function () {
                Initialize();
            });

            // Where all the fun happens
            function Initialize() {

                // Google has tweaked their interface somewhat - this tells the api to use that new UI
                google.maps.visualRefresh = true;
                @*var z = @ViewBag.Szerokosc;
                var m = z+1;*@
                var dlugosc = @Convert.ToString(@Model.Dlugosc, CultureInfo.InvariantCulture);
                var szerokosc = @Convert.ToString(@Model.Szerokosc, CultureInfo.InvariantCulture);
                var Liverpool = new google.maps.LatLng(dlugosc, szerokosc);
                @*var Liverpool = new google.maps.LatLng(@ViewBag.Szerokosc,@ViewBag.Dlugosc);*@

                // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
                var mapOptions = {
                    zoom: 15,
                    center: Liverpool,
                    mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
                };

                // This makes the div with id "map_canvas" a google map
                var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

                // This shows adding a simple pin "marker" - this happens to be the Tate Gallery in Liverpool!
                var myLatlng = new google.maps.LatLng(53.40091, -2.994464);

                var marker = new google.maps.Marker({
                    position: myLatlng,
                    map: map,
                    title: 'Tate Gallery'
                });

                // You can make markers different colors...  google it up!
                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png')

                // a sample list of JSON encoded data of places to visit in Liverpool, UK
                // you can either make up a JSON list server side, or call it from a controller using JSONResult


                //var data = [
                //        { "Id": 1, "Nazwa": "PURE MUSCLES ZLOTE TARASY", "GodzinyOtwarcia": "07:00 - 23:30", "GeoLong": "52.230240", "GeoLat": "21.003694", "Opis": "Silownia znajduje sie na 3 pietrze" },
                //        { "Id": 2, "Nazwa": "PURE MUSCLES POZNAN", "GodzinyOtwarcia": "08:00 - 24:00", "GeoLong": "52.410100", "GeoLat": "16.926690" },
                //        { "Id": 3, "Nazwa": "PURE MUSCLES SKY CLUB", "GodzinyOtwarcia": "24h/d", "GeoLong": "52.232307", "GeoLat": "20.984304" },
                //        { "Id": 4, "Nazwa": "PURE MUSCLES MANUFAKTURA", "GodzinyOtwarcia": "06:30 - 22:30", "GeoLong": "51.780001", "GeoLat": "19.447375" }
                //];

                $.ajax({
                    url: '@Url.Action("SilowniaInfoJSON")',
                    type: "POST",
                    success: function (json) {

                    //    alert("true")
                        $.each(json, function (i, item) {
                            var marker = new google.maps.Marker({
                                'position': new google.maps.LatLng(item.dlugosc, item.szerokosc),
                                'map': map,
                                'title': item.nazwa
                            });

                            // Make the marker-pin blue!
                            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

                            // put in some information about each json object - in this case, the opening hours.
                            var infowindow = new google.maps.InfoWindow({
                                content:
                                        "<div class='h6' style='color:black'><h4>" + item.nazwa + "</h2>"
                                        + "<div><div class='h6' style='color:black'>Info:<div style='color:blue'> " + item.info
                                        + "</div> " + "<br/>Godziny otwarcia:<div style='color:blue'> " + item.godzOtw
                                        +  "</div> " + "<br/>Godziny zamknięcia:<div style='color:blue'> " + item.godzZam

                            });

                            // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
                            google.maps.event.addListener(marker, 'click', function () {
                                infowindow.open(map, marker);
                            });

                        })

                    },
                    error: function () {
                        alert("Coś poszło nie tak z mapami");
                    }
                });

                // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins

            }


        </script>
    </section>
}


